{"version":3,"sources":["webpack:///./src/sprite.js"],"names":["document","addEventListener","main","s","create","getElementById","textureInfos","im","loadTex","console","log","gl","drawInfos","numToDraw","speed","ii","drawInfo","x","Math","random","canvas","width","y","height","dx","dy","xScale","yScale","offX","offY","PI","length","push","update","deltaTime","forEach","rotation","deltaRotation","draw","viewport","clear","COLOR_BUFFER_BIT","i","dstX","dstY","dstWidth","textureInfo","dstHeight","srcX","srcY","srcWidth","srcHeight","drawImage","texture","then","render","time","now","min","requestAnimationFrame","module","hot","accept"],"mappings":"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","file":"build/sprite.js","sourcesContent":["import Stage from 'stage'\n\ndocument.addEventListener(\"DOMContentLoaded\", main, false);\nasync function main(){\n    \n  let s = Stage.create(document.getElementById('gl'));\n\n  let textureInfos = \n      //[await s.im.loadTexture('../assets/tex.jpg')]\n      await s.im.loadTex(['../assets/tex.jpg','../assets/hero.jpg','../assets/ji.jpg'])\n  ;\n    console.log(textureInfos,11)  \n  let gl = s.gl\n  let drawInfos = [];\n  let numToDraw = 3;\n  let speed = 60;\n  for (let ii = 0; ii < numToDraw; ++ii) {\n      let drawInfo = {\n          x: Math.random() * gl.canvas.width,\n          y: Math.random() * gl.canvas.height,\n          dx: Math.random() > 0.5 ? -1 : 1,\n          dy: Math.random() > 0.5 ? -1 : 1,\n          xScale: Math.random() * 0.25 + 0.25,\n          yScale: Math.random() * 0.25 + 0.25,\n          offX: Math.random() * 0.75,\n          offY: Math.random() * 0.75,\n          offX: 0,\n          offY: 0,\n          rotation: Math.random() * Math.PI * 2,\n          deltaRotation: (0.5 + Math.random() * 0.5) * (Math.random() > 0.5 ? -1 : 1),\n          width:  1,\n          height: 1,\n          textureInfo: textureInfos[Math.random() * textureInfos.length | 0],\n      };\n      drawInfos.push(drawInfo);\n  }\n    \n  function update(deltaTime) {\n      drawInfos.forEach(function(drawInfo) {\n          drawInfo.x += drawInfo.dx * speed * deltaTime;\n          drawInfo.y += drawInfo.dy * speed * deltaTime;\n          if (drawInfo.x < 0) {\n            drawInfo.dx = 1;\n          }\n          if (drawInfo.x >= gl.canvas.width) {\n            drawInfo.dx = -1;\n          }\n          if (drawInfo.y < 0) {\n            drawInfo.dy = 1;\n          }\n          if (drawInfo.y >= gl.canvas.height) {\n            drawInfo.dy = -1;\n          }\n          drawInfo.rotation += drawInfo.deltaRotation * deltaTime;\n      });\n  }\n\n  function draw() {\n        \n      gl.viewport(0, 0, gl.canvas.width, gl.canvas.height);\n        \n      gl.clear(gl.COLOR_BUFFER_BIT);\n        \n        drawInfos.forEach(function(drawInfo,i) {\n              let dstX      = drawInfo.x;\n              let dstY      = drawInfo.y;\n              let dstWidth  = drawInfo.textureInfo.width  * drawInfo.xScale;\n              let dstHeight = drawInfo.textureInfo.height * drawInfo.yScale;\n        \n              let srcX      = drawInfo.textureInfo.width  * drawInfo.offX;\n              let srcY      = drawInfo.textureInfo.height * drawInfo.offY;\n              let srcWidth  = drawInfo.textureInfo.width  * drawInfo.width;\n              let srcHeight = drawInfo.textureInfo.height * drawInfo.height;\n        \n              s.im.drawImage(\n                drawInfo.textureInfo.texture,\n                drawInfo.textureInfo.width,\n                drawInfo.textureInfo.height,\n                srcX, srcY, srcWidth, srcHeight,\n                dstX, dstY, dstWidth, dstHeight,\n                drawInfo.rotation);\n        });\n    }\n\n\n    let then = 0;\n    function render(time) {\n      let now = time * 0.001;\n      let deltaTime = Math.min(0.1, now - then);\n      then = now;\n          \n      update(deltaTime);\n      draw();\n      requestAnimationFrame(render);\n    }\n    requestAnimationFrame(render);\n}\n\n\n// function main(){\n\n//   let s = Stage.create(document.getElementById('gl'));\n//   let textureInfos = [\n//            s.im.loadTexture('../assets/tex.jpg')\n//   ];\n//   let gl = s.gl\n\n//         var drawInfos = [];\n//       var numToDraw = 1;\n//       var speed = 60;\n//       for (var ii = 0; ii < numToDraw; ++ii) {\n//         var drawInfo = {\n//           x: Math.random() * gl.canvas.width,\n//           y: Math.random() * gl.canvas.height,\n//           dx: Math.random() > 0.5 ? -1 : 1,\n//           dy: Math.random() > 0.5 ? -1 : 1,\n//           xScale: Math.random() * 0.25 + 0.25,\n//           yScale: Math.random() * 0.25 + 0.25,\n//           offX: Math.random() * 0.75,\n//           offY: Math.random() * 0.75,\n//           offX: 0,\n//           offY: 0,\n//           rotation: Math.random() * Math.PI * 2,\n//           deltaRotation: (0.5 + Math.random() * 0.5) * (Math.random() > 0.5 ? -1 : 1),\n//           width:  1,\n//           height: 1,\n//           textureInfo: textureInfos[Math.random() * textureInfos.length | 0],\n//         };\n//         drawInfos.push(drawInfo);\n//       }\n\n//       s.update=function(){\n//           drawInfos.forEach(function(drawInfo) {\n//           drawInfo.x += drawInfo.dx * speed * s.deltaTime;\n//           drawInfo.y += drawInfo.dy * speed * s.deltaTime;\n//           if (drawInfo.x < 0) {\n//             drawInfo.dx = 1;\n//           }\n//           if (drawInfo.x >= gl.canvas.width) {\n//             drawInfo.dx = -1;\n//           }\n//           if (drawInfo.y < 0) {\n//             drawInfo.dy = 1;\n//           }\n//           if (drawInfo.y >= gl.canvas.height) {\n//             drawInfo.dy = -1;\n//           }\n//           drawInfo.rotation += drawInfo.deltaRotation * s.deltaTime;\n//         });\n//       }\n\n//       s.draw=function(){\n//                     s.viewport();\n        \n//             s.clear();\n        \n//             drawInfos.forEach(function(drawInfo,i) {\n//               let dstX      = drawInfo.x;\n//               let dstY      = drawInfo.y;\n//               let dstWidth  = drawInfo.textureInfo.width  * drawInfo.xScale;\n//               let dstHeight = drawInfo.textureInfo.height * drawInfo.yScale;\n        \n//               let srcX      = drawInfo.textureInfo.width  * drawInfo.offX;\n//               let srcY      = drawInfo.textureInfo.height * drawInfo.offY;\n//               let srcWidth  = drawInfo.textureInfo.width  * drawInfo.width;\n//               let srcHeight = drawInfo.textureInfo.height * drawInfo.height;\n        \n//               s.im.drawImage(\n//                 drawInfo.textureInfo.texture,\n//                 drawInfo.textureInfo.width,\n//                 drawInfo.textureInfo.height,\n//                 srcX, srcY, srcWidth, srcHeight,\n//                 dstX, dstY, dstWidth, dstHeight,\n//                 drawInfo.rotation);\n//             });\n//             //console.log(drawInfos)\n//       }\n\n//       //.render()\n\n\n// }\n\nif (module.hot) module.hot.accept();\n\n\n// WEBPACK FOOTER //\n// ./src/sprite.js"],"sourceRoot":""}